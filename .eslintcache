[{"/home/karthick/project2/src/index.js":"1","/home/karthick/project2/src/App.js":"2","/home/karthick/project2/src/reportWebVitals.js":"3","/home/karthick/project2/src/Router/Routing.js":"4","/home/karthick/project2/src/Router/ProtectedRoute.js":"5","/home/karthick/project2/src/Components/auth/Login.js":"6","/home/karthick/project2/src/Components/auth/Register.js":"7","/home/karthick/project2/src/Components/common/Home.js":"8","/home/karthick/project2/src/Redux/Reducers/authenticationFunctions/action.js":"9","/home/karthick/project2/src/Redux/Reducers/authenticationFunctions/actionTypes.js":"10","/home/karthick/project2/src/Redux/store.js":"11","/home/karthick/project2/src/Redux/Reducers/index.js":"12","/home/karthick/project2/src/Redux/Reducers/authenticationFunctions/reducer.js":"13","/home/karthick/project2/src/config.js":"14"},{"size":381,"mtime":1609851067234,"results":"15","hashOfConfig":"16"},{"size":294,"mtime":1609850966554,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1609224507460,"results":"18","hashOfConfig":"16"},{"size":1175,"mtime":1609853246299,"results":"19","hashOfConfig":"16"},{"size":309,"mtime":1609853309352,"results":"20","hashOfConfig":"16"},{"size":5014,"mtime":1609855613818,"results":"21","hashOfConfig":"16"},{"size":8108,"mtime":1609855621822,"results":"22","hashOfConfig":"16"},{"size":483,"mtime":1609853177930,"results":"23","hashOfConfig":"16"},{"size":3148,"mtime":1609852320903,"results":"24","hashOfConfig":"16"},{"size":487,"mtime":1600015798264,"results":"25","hashOfConfig":"16"},{"size":444,"mtime":1600017656134,"results":"26","hashOfConfig":"16"},{"size":194,"mtime":1600017486359,"results":"27","hashOfConfig":"16"},{"size":2520,"mtime":1600019714948,"results":"28","hashOfConfig":"16"},{"size":47,"mtime":1600527435366,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1xj514i",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/home/karthick/project2/src/index.js",[],["62","63"],"/home/karthick/project2/src/App.js",[],"/home/karthick/project2/src/reportWebVitals.js",[],["64","65"],"/home/karthick/project2/src/Router/Routing.js",[],"/home/karthick/project2/src/Router/ProtectedRoute.js",[],"/home/karthick/project2/src/Components/auth/Login.js",["66"],"/home/karthick/project2/src/Components/auth/Register.js",[],"/home/karthick/project2/src/Components/common/Home.js",[],"/home/karthick/project2/src/Redux/Reducers/authenticationFunctions/action.js",["67"],"import {\n    LOGIN_REQUEST,\n    LOGIN_FAILURE,\n    LOGIN_SUCCESS,\n    PASSWORD_RESET_SUCCESS,\n    PASSWORD_RESET_FAILURE,\n    PASSWORD_RESET_REQUEST,\n    REGISTER_REQUEST,\n    REGISTER_SUCCESS,\n    REGISTER_FAILURE,\n} from \"./actionTypes\";\nimport axios from 'axios';\nimport { baseUrl } from '../../../config'\n\nconst requestRegister = () => {\n    return {\n        type: REGISTER_REQUEST\n    };\n};\n\nconst registerSuccess = (payload) => {\n    return {\n        type: REGISTER_SUCCESS,\n        payload\n    };\n};\n\nconst registerFailure = (payload) => {\n    return {\n        type: REGISTER_FAILURE,\n        payload\n    };\n};\n\nconst requestLogin = () => {\n    return {\n        type: LOGIN_REQUEST\n    };\n};\n\nconst receiveLogin = (payload) => {\n    return {\n        type: LOGIN_SUCCESS,\n        payload\n    };\n};\n\nconst loginError = (payload) => {\n    return {\n        type: LOGIN_FAILURE,\n        payload\n    };\n};\n\nconst passwordResetRequest = () => {\n    return {\n        type: PASSWORD_RESET_REQUEST\n    };\n};\n\nconst receivePasswordReset = () => {\n    return {\n        type: PASSWORD_RESET_SUCCESS\n    };\n};\n\nconst passwordResetError = (payload) => {\n    return {\n        type: PASSWORD_RESET_FAILURE,\n        payload\n    };\n};\n\nexport const registerUser = (payload) => dispatch => {\n    dispatch(requestRegister());\n    if (payload.email === \"rkarthick410@gmail.com\") {\n        dispatch(registerSuccess(\"data\"))\n    }\n    else {\n        dispatch(registerFailure(\"err\"))\n    }\n    // return axios({\n    //     method: 'POST',\n    //     url: baseUrl + \"api/auth/signup/\",\n    //     headers: { 'Content-Type': 'application/json;charset=utf-8' },\n    //     payload\n    // })\n    //     .then(res => {\n    //         if (res.status !== 200)\n    //             throw new Error()\n    //         dispatch(registerSuccess(res.data))\n    //     })\n    //     .catch(err => dispatch(registerFailure(err)))\n};\nexport const loginUser = (payload) => dispatch => {\n    dispatch(requestLogin());\n    const data = JSON.parse(payload)\n    console.log(data.email)\n    if (data.email == \"rkarthick410@gmail.com\") {\n        dispatch(receiveLogin(\"res.data\"))\n    }\n    else {\n        dispatch(loginError(\"err\"))\n    }\n    // return axios({\n    //     method: 'POST',\n    //     url: baseUrl + \"api/auth/login/\",\n    //     headers: { 'Content-Type': 'application/json;charset=utf-8' },\n    //     payload\n    // })\n    //     .then(res => {\n    //         if (res.status !== 200)\n    //             throw new Error()\n    //         dispatch(receiveLogin(res.data))\n    //     })\n    //     .catch(err => dispatch(loginError(err)))\n};\n\nexport const passwordReset = (payload) => dispatch => {\n    dispatch(passwordResetRequest());\n    console.log(payload)\n    return axios({\n        method: 'POST',\n        url: baseUrl + \"api/auth/request-password-reset/\",\n        headers: { 'Content-Type': 'application/json;charset=utf-8' },\n        payload\n    })\n        .then(res => {\n            if (res.status !== 200)\n                throw new Error()\n            dispatch(receivePasswordReset(res.data))\n        })\n        .catch(err => dispatch(passwordResetError(err)))\n};\n\n\n\n","/home/karthick/project2/src/Redux/Reducers/authenticationFunctions/actionTypes.js",[],"/home/karthick/project2/src/Redux/store.js",[],"/home/karthick/project2/src/Redux/Reducers/index.js",[],"/home/karthick/project2/src/Redux/Reducers/authenticationFunctions/reducer.js",["68"],"import {\n    LOGIN_REQUEST,\n    LOGIN_FAILURE,\n    LOGIN_SUCCESS,\n    PASSWORD_RESET_SUCCESS,\n    PASSWORD_RESET_FAILURE,\n    PASSWORD_RESET_REQUEST,\n    REGISTER_REQUEST,\n    REGISTER_SUCCESS,\n    REGISTER_FAILURE,\n} from \"./actionTypes\";\n\nexport default (\n    state = {\n        isLoggingIn: false,\n        loginError: false,\n        loginErrorMessage: {},\n        isAuthenticated: false,\n        isPasswordReset: false,\n        isPasswordResetSuccess: false,\n        isPasswordResetError: false,\n        isPasswordResetMessage: {},\n        isSignUp: false,\n        isSignUpError: false,\n        isSignUpSuccess: false,\n        isSignUpErrorMessage: {},\n        user_data: {},\n    },\n    action\n) => {\n    switch (action.type) {\n        case LOGIN_REQUEST:\n            return {\n                ...state,\n                isLoggingIn: true,\n                loginError: false\n            };\n        case LOGIN_SUCCESS:\n            return {\n                ...state,\n                isLoggingIn: false,\n                isAuthenticated: true,\n                user_data:action.payload\n            };\n        case LOGIN_FAILURE:\n            return {\n                ...state,\n                isLoggingIn: false,\n                isAuthenticated: false,\n                loginError: true,\n                loginErrorMessage: action.payload\n            };\n        case PASSWORD_RESET_REQUEST:\n            return {\n                ...state,\n                isPasswordReset: true,\n                isPasswordResetError: false\n            };\n        case PASSWORD_RESET_SUCCESS:\n            return {\n                ...state,\n                isPasswordReset: false,\n                isPasswordResetSuccess:true\n                \n            };\n        case PASSWORD_RESET_FAILURE:\n            return {\n                ...state,\n                isPasswordReset: false,\n                isPasswordResetError: true,\n                isPasswordResetMessage: action.payload\n            };\n        case REGISTER_REQUEST:\n            return {\n                ...state,\n                isSignUp: true\n            };\n        case REGISTER_FAILURE:\n            return {\n                ...state,\n                isSignUp: false,\n                isSignUpError: true,\n                isSignUpErrorMessage: action.payload\n            };\n        case REGISTER_SUCCESS:\n            return {\n                ...state,\n                isSignUp: false,\n                isSignUpSuccess: true\n            };\n        default:\n            return state;\n    }\n};","/home/karthick/project2/src/config.js",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"69","replacedBy":"73"},{"ruleId":"71","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":36,"column":61,"nodeType":"77","messageId":"78","endLine":36,"endColumn":76},{"ruleId":"79","severity":1,"message":"80","line":99,"column":20,"nodeType":"81","messageId":"82","endLine":99,"endColumn":22},{"ruleId":"83","severity":1,"message":"84","line":13,"column":1,"nodeType":"85","endLine":94,"endColumn":3},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],["86"],["87"],"no-unused-vars","'isAuthenticated' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]